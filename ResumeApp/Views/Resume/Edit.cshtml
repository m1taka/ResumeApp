@using ResumeApp.Helper;
@model ResumeApp.Helper.External.Models.Resume

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)*@

        <div class="form-group">
            @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="jobs">

            @for (int i = 0; i < Model.Employments.Count; i++)
            {
                <div job-index="@i">
                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Employments[i].Position, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Employments[i].Position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Employments[i].Position, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Employments[i].Company, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Employments[i].Company, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Employments[i].Company, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Employments[i].DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Employments[i].DateStart, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Employments[i].DateStart, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Employments[i].DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Employments[i].DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Employments[i].DateEnd, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="educations">
            @for (int i = 0; i < Model.Educations.Count; i++)
            {
                <div edu-index="@i">
                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Educations[i].Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Educations[i].Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Educations[i].Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Educations[i].Speciality, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Educations[i].Speciality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Educations[i].Speciality, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => Model.Educations[i].University, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(m => Model.Educations[i].University, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.Educations[i].University, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}